{"version":3,"sources":["services/apartments.ts","components/Copyright.tsx","components/ApartmentForm.tsx","components/ApartmentAttr.tsx","components/Apartment.tsx","components/Apartments.tsx","App.tsx","theme.tsx","index.tsx"],"names":["baseUrl","pagination","axios","get","limit","skip","then","response","data","newObject","post","id","patch","delete","useStyles","makeStyles","theme","footer","borderTop","palette","divider","marginTop","spacing","paddingTop","Copyright","classes","Typography","variant","color","align","className","Link","href","Date","getFullYear","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","padding","buttons","display","justifyContent","button","ApartmentForm","closeFormHandler","formAction","formData","submitHandler","fromDataHandler","Paper","component","Grid","container","item","xs","TextField","required","name","label","fullWidth","onChange","value","address","sm","postalCode","postalArea","rooms","squareMeters","FormControlLabel","control","Checkbox","checked","hasElevator","buildYear","price","multiline","rows","notes","Button","onClick","ApartmentAttr","props","attr","cardGrid","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","Apartment","apartment","openFormHandler","deleteHandler","key","_id","md","Card","CardMedia","image","title","CardContent","CardActions","size","Apartments","apartments","prePageHandler","nextPageHandler","length","map","direction","alignItems","ButtonGroup","aria-label","disabled","total","header","flex","borderBottom","newBtn","float","App","emptyForm","useState","setApartments","formStatus","setFormStatus","setFormAction","setFormData","setPagination","useEffect","apartmentsService","action","Container","maxWidth","Box","my","gutterBottom","Fab","window","confirm","res","filter","idx","findIndex","apt","newData","e","target","createMuiTheme","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.ba1ff77a.chunk.js","sourcesContent":["/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport axios from 'axios';\n\nconst baseUrl: string = 'https://dwellet-api.harrytang.com/apartments';\n//const baseUrl: string = 'http://localhost:3030/apartments';\n\nconst getAll = (pagination: {limit: number, skip: number}) => {\n    const request = axios.get(`${baseUrl}/?$limit=${pagination.limit}&$skip=${pagination.skip}&$sort[createdAt]=-1`);\n    return request.then(response => response.data);\n};\n\nconst create = (newObject: object) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data)\n};\n\nconst update = (id: string, newObject: object) => {\n    const request = axios.patch(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data)\n};\n\nconst remove = (id: string) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data)\n};\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n}","/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport React from 'react';\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from '@material-ui/core/styles';\n\n/* style */\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(4),\n        paddingTop: theme.spacing(2),\n    },\n}));\n\n\nconst Copyright: React.FC = () => {\n\n    const classes = useStyles();\n\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.footer}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://dwellet.harrytang.com/\">\n                dwellet\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n};\n\nexport default Copyright;","/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    closeFormHandler: any,\n    formAction: (string|null),\n    fromDataHandler: any,\n    formData: any,\n    submitHandler: any\n}\n\nconst ApartmentForm: React.FC<Props> = ({closeFormHandler, formAction, formData, submitHandler, fromDataHandler}) => {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    {formAction===null?'New Apartment': 'Update ApartmentForm'}\n                </Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"address\"\n                            name=\"address\"\n                            label=\"Address\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.address}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"postalCode\"\n                            name=\"postalCode\"\n                            label=\"Postal Code\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.postalCode}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"postalArea\"\n                            name=\"postalArea\"\n                            label=\"Postal Area\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.postalArea}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"rooms\"\n                            name=\"rooms\"\n                            label=\"Rooms\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.rooms}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            required\n                            id=\"squareMeters\"\n                            name=\"squareMeters\"\n                            label=\"Square Meters\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.squareMeters}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <FormControlLabel\n                            control={<Checkbox color=\"secondary\" name=\"hasElevator\" onChange={fromDataHandler}\n                                               checked={formData.hasElevator}/>}\n                            label=\"Elevator\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"buildYear\"\n                            name=\"buildYear\"\n                            label=\"Build Year\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.buildYear}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"price\"\n                            name=\"price\"\n                            label=\"Price\"\n                            fullWidth\n                            onChange={fromDataHandler}\n                            value={formData.price}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"notes\"\n                            name=\"notes\"\n                            label=\"Notes\"\n                            fullWidth\n                            multiline\n                            rows=\"6\"\n                            onChange={fromDataHandler}\n                            value={formData.notes}\n                        />\n                    </Grid>\n\n                    <div className={classes.buttons}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={submitHandler}>Submit</Button>\n                        <Button variant=\"contained\" className={classes.button} onClick={closeFormHandler}>Back</Button>\n                    </div>\n\n                </Grid>\n            </Paper>\n        </main>\n    );\n};\n\nexport default ApartmentForm;","/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface Props {\n    attr: string,\n    value: (string | number | boolean)\n}\n\nconst ApartmentAttr: React.FC<Props> = (props) => {\n    return (\n        <>\n            <Grid item xs={4}>\n                <Typography variant=\"body1\">{props.attr}</Typography>\n            </Grid>\n            <Grid item xs={8}>\n                <Typography variant=\"body1\">{props.value}</Typography>\n            </Grid>\n        </>\n    );\n};\n\nexport default ApartmentAttr;\n","/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ApartmentAttr from \"./ApartmentAttr\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport IApartment from './IApartment';\n\ninterface Props {\n    apartment: IApartment,\n    openFormHandler: any,\n    deleteHandler: any\n}\n\n/* style */\nconst useStyles = makeStyles(theme => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}));\n\nconst Apartment: React.FC<Props> = ({apartment, openFormHandler, deleteHandler}) => {\n    const classes = useStyles();\n\n    return (\n        <Grid item key={apartment._id} xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/featured/?house\"\n                    title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                    <Grid container>\n                        <ApartmentAttr attr=\"Address\" value={apartment.address} />\n                        <ApartmentAttr attr=\"Postal Code\" value={apartment.postalCode} />\n                        <ApartmentAttr attr=\"Postal Area\" value={apartment.postalArea} />\n                        <ApartmentAttr attr=\"Rooms\" value={apartment.rooms} />\n                        <ApartmentAttr attr=\"Square m²\" value={apartment.squareMeters} />\n                        <ApartmentAttr attr=\"Build Year\" value={apartment.buildYear} />\n                        {typeof apartment.hasElevator===\"boolean\"?<ApartmentAttr attr=\"Elevator\" value={apartment.hasElevator?'Yes':'No'} />:null}\n                        <ApartmentAttr attr=\"Price\" value={apartment.price} />\n                        {typeof apartment.notes===\"string\"?<ApartmentAttr attr=\"Note\" value={apartment.notes} />:null}\n                    </Grid>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={()=>openFormHandler(apartment._id, apartment)}>\n                        Edit\n                    </Button>\n                    <Button size=\"small\" color=\"secondary\" variant=\"contained\" onClick={()=>deleteHandler(apartment._id)}>\n                        Delete\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default Apartment;","/**\n * @author Harry Tang <harry@powerkernel.com>\n * @link https://powerkernel.com\n * @copyright Copyright (c) 2019 Power Kernel\n */\n\nimport React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Apartment from \"./Apartment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IApartment from \"./IApartment\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\ninterface Props {\n    apartments: IApartment[],\n    deleteHandler: any,\n    openFormHandler: any,\n    nextPageHandler: any,\n    prePageHandler: any,\n    pagination: any\n}\n\nconst Apartments: React.FC<Props> = ({apartments, pagination, prePageHandler, nextPageHandler, openFormHandler, deleteHandler}) => {\n    return (\n        <>\n            {apartments.length > 0 ? (\n                <Grid container spacing={4}>\n                    {apartments.map(apartment => (\n                        <Apartment\n                            key={apartment._id}\n                            apartment={apartment}\n                            openFormHandler={openFormHandler}\n                            deleteHandler={deleteHandler}\n                        />\n                    ))}\n                    <Grid container spacing={1} direction=\"column\" alignItems=\"center\">\n                        <Grid item>\n                            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                                <Button variant=\"contained\" disabled={pagination.skip === 0}\n                                        onClick={prePageHandler}>PRE</Button>\n                                <Button variant=\"contained\"\n                                        disabled={pagination.skip + pagination.limit >= pagination.total}\n                                        onClick={nextPageHandler}>NEXT</Button>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            ) : (\n                <Typography variant=\"body1\">\n                    {pagination.total === -1 ? 'Loading...' : 'No data'}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nexport default Apartments;","import React, {useEffect, useState} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport IApartment from './components/IApartment';\nimport apartmentsService from \"./services/apartments\";\n\n// components\nimport Copyright from \"./components/Copyright\";\nimport ApartmentForm from \"./components/ApartmentForm\";\nimport Apartments from \"./components/Apartments\";\n\n/* style */\nconst useStyles = makeStyles(theme => ({\n    header: {\n        flex: 1,\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        paddingBottom: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n    newBtn: {\n        float: 'right'\n    }\n}));\n\n\n/* Main */\nconst App: React.FC = () => {\n    const classes = useStyles();\n\n    const emptyForm = {\n        address: '',\n        postalCode: '',\n        postalArea: '',\n        rooms: '',\n        squareMeters: '',\n        hasElevator: false,\n        buildYear: '',\n        price: '',\n        notes: ''\n    };\n    // app states\n    const [apartments, setApartments] = useState<IApartment[]>([]);\n    const [formStatus, setFormStatus] = useState<string>('closed');\n    const [formAction, setFormAction] = useState<(string | null)>(null); // null for adding new apt, or formAction is _id of updating apt\n    const [formData, setFormData] = useState<any>(emptyForm);\n    const [pagination, setPagination] = useState<any>({\n        total: -1, // -1 is for show 'loading' text when page first loaded instead showing 'no data',\n        limit: 6, // 6 apt per page\n        skip: 0,\n    });\n\n\n    // fetch data from backend server\n    useEffect(() => {\n        apartmentsService.getAll({limit: 6, skip:0}).then(\n            data => {\n                setPagination({\n                    total: data.total,\n                    limit: data.limit,\n                    skip: data.skip\n                });\n                setApartments(data.data);\n            }\n        );\n    }, []);\n\n    // pagination handlers (pre, next)\n    const nextPageHandler = () => {\n        apartmentsService.getAll({limit: pagination.limit, skip: pagination.skip + pagination.limit}).then(\n            data => {\n                setPagination({\n                    total: data.total,\n                    limit: data.limit,\n                    skip: data.skip\n                });\n                setApartments(data.data);\n            }\n        );\n    };\n    const prePageHandler = () => {\n        apartmentsService.getAll({limit: pagination.limit, skip: pagination.skip - pagination.limit}).then(\n            data => {\n                setPagination({\n                    total: data.total,\n                    limit: data.limit,\n                    skip: data.skip\n                });\n                setApartments(data.data);\n            }\n        );\n    };\n\n    // delete apt\n    const deleteHandler = (id: string) => {\n        if (window.confirm(\"Do you really want to delete this?\")) {\n            apartmentsService.remove(id)\n                .then(res => {\n                    const remainingApt = apartments.filter(apartment => apartment._id !== res._id);\n                    if(remainingApt.length===0){\n                        // no apt left from state, load from server\n                        apartmentsService.getAll({limit: pagination.limit, skip: 0}).then(\n                            data => {\n                                setPagination({\n                                    total: data.total,\n                                    limit: data.limit,\n                                    skip: data.skip\n                                });\n                                setApartments(data.data);\n                            }\n                        );\n                    }\n                    else {\n                        // just remove apt form state if there still have apts\n                        setApartments(apartments.filter(apartment => apartment._id !== res._id))\n                    }\n                });\n        }\n    };\n\n    // add/edit apt\n    const submitHandler = () => {\n        // add new apt\n        if (formAction === null) {\n            apartmentsService.create(formData)\n                .then(res => {\n                    setFormStatus('closed');\n                    apartmentsService.getAll({limit: pagination.limit, skip: 0}).then(\n                        data => {\n                            setPagination({\n                                total: data.total,\n                                limit: data.limit,\n                                skip: data.skip\n                            });\n                            setApartments(data.data);\n                        }\n                    );\n                });\n        } else {\n            // update apt\n            apartmentsService.update(formAction, formData)\n                .then(res => {\n                    const idx = apartments.findIndex(apt => apt._id === res._id);\n                    const newData = [...apartments];\n                    newData[idx] = res;\n                    setFormStatus('closed');\n                    setApartments(newData)\n                });\n        }\n    };\n\n    // open/close apt form\n    const openFormHandler = (action: (string | null), data: (IApartment | null) = null) => {\n        setFormAction(action); // action = null is for adding new apt, action = apt ID is for updating apt\n        if (data !== null) {\n            setFormData(data);\n        } else {\n            setFormData(emptyForm)\n        }\n        setFormStatus('opened');\n    };\n    const closeFormHandler = () => {\n        setFormStatus('closed');\n    };\n\n    // handler form data\n    const fromDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const data = {...formData};\n        const name = e.target.name;\n\n        let value: (string | boolean) = '';\n        if (name !== 'hasElevator') {\n            value = e.target.value;\n        } else {\n            value = e.target.checked;\n        }\n\n        data[name] = value;\n        setFormData(data);\n    };\n\n    // render\n    return (\n        <Container maxWidth=\"lg\">\n            <Box my={4}>\n\n                <Typography variant=\"h3\" component=\"h1\" gutterBottom className={classes.header}>\n                    Apartments\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.newBtn}\n                         onClick={() => openFormHandler(null)}>\n                        <AddIcon/>\n                    </Fab>\n                </Typography>\n\n                {\n                    formStatus === 'closed' ?\n                        <Apartments apartments={apartments}\n                                    pagination={pagination}\n                                    prePageHandler={prePageHandler}\n                                    nextPageHandler={nextPageHandler}\n                                    openFormHandler={openFormHandler}\n                                    deleteHandler={deleteHandler}/> :\n                        <ApartmentForm\n                            closeFormHandler={closeFormHandler}\n                            formAction={formAction}\n                            formData={formData}\n                            submitHandler={submitHandler}\n                            fromDataHandler={fromDataHandler}\n                        />\n                }\n\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n};\n\nexport default App;","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline/>\n        <App/>\n    </ThemeProvider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}